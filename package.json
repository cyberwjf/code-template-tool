{
    "name": "code-template-tool",
    "displayName": "Code Template Tool",
    "description": "Generate code based on the template",
    "icon": "resource/img/icon.png",
    "version": "0.6.1",
    "publisher": "yuanhjty",
    "license": "MIT",
    "keywords": [
        "file",
        "folder",
        "template",
        "tool"
    ],
    "repository": {
        "type": "git",
        "url": "https://github.com/yuanhjty/code-template-tool.git"
    },
    "engines": {
        "vscode": "^1.30.2"
    },
    "categories": [
        "Other"
    ],
    "activationEvents": [
        "onCommand:extension.newQueryFromTemplate",
        "onCommand:extension.newRefinementFromTemplate"
    ],
    "main": "./out/extension",
    "contributes": {
        "commands": [
            {
                "command": "extension.newQueryFromTemplate",
                "title": "New Query From Template",
                "category": "template"
            },
            {
                "command": "extension.newRefinementFromTemplate",
                "title": "New Refinement From Template",
                "category": "template"
            }
        ],
        "menus": {
            "explorer/context": [
                {
                    "command": "extension.newQueryFromTemplate",
                    "group": "navigation"
                },
                {
                    "command": "extension.newRefinementFromTemplate",
                    "group": "navigation"
                }
            ]
        },
        "configuration": {
            "type": "object",
            "title": "Code Template",
            "properties": {
                "codeTemplateTool.templatesPath": {
                    "type": "string",
                    "default": "{workspace}/.vscode/templates",
                    "description": "Absolute path only. \nVariables supported: \n 1. `{home}`: User home directory. \n 2. `{workspace}`: Workspace directory(directory currently open in vscode) or user home directory if no open directory. \n Examples: `{home}/.vscode/templates`, `{workspace}/templates`. \nYou can also use `~/` to reference user home directory."
                },
                "codeTemplateTool.configFile": {
                    "type": "string",
                    "default": "template.config.json"
                },
                "codeTemplateTool.encoding": {
                    "type": "string",
                    "default": "utf8"
                },
                "codeTemplateTool.ignore": {
                    "type": "array",
                    "default": [
                        ".DS_Store"
                    ],
                    "description": "An array of glob patterns. Files and folders that match one of the specified patterns will be ignored."
                },
                "codeTemplateTool.variable.noTransformation": {
                    "type": "boolean",
                    "default": false,
                    "description": "Control variable transformation globally. If set to true, raw user input will be used to replace the placeholders in template content. Can be overwritten by the `style.noTransformation` filed in variable configuration."
                },
                "codeTemplateTool.variable.keepUpperCase": {
                    "type": "boolean",
                    "default": false,
                    "description": "If set to `true`, uppercase words in user input variable value will not be transformed to other cases. Can be overwritten by the `style.keepUpperCase` field in variable configuration."
                },
                "codeTemplateTool.variable.leftBoundary": {
                    "type": "string",
                    "default": "___",
                    "description": "The default value is for compatibility. If using variable in file names, the boundary token should not be reserved characters of your operating system. Examples: `{_`, `{{`, `{%`"
                },
                "codeTemplateTool.variable.rightBoundary": {
                    "type": "string",
                    "default": "___",
                    "description": "The default value is for compatibility. If using variable in file names, the boundary token should not be reserved characters of your operating system. Examples: `_}`, `}}`, `%}`"
                },
                "codeTemplateTool.userInput.confirmOnEnter": {
                    "type": "boolean",
                    "default": false,
                    "description": "If set to `true`, you can press `enter` key to `confirm`."
                },
                "codeTemplateTool.userInput.cancelOnEscape": {
                    "type": "boolean",
                    "default": false,
                    "description": "If set to `true`, you can press `esc` key to `cancel`."
                }
            }
        }
    },
    "scripts": {
        "vscode:prepublish": "npm run compile",
        "compile": "tsc -p ./",
        "watch": "tsc -watch -p ./",
        "postinstall": "node ./node_modules/vscode/bin/install",
        "test": "npm run compile && node ./node_modules/vscode/bin/test"
    },
    "devDependencies": {
        "@types/chai": "^4.1.7",
        "@types/glob": "^7.1.1",
        "@types/mocha": "^2.2.42",
        "@types/node": "^8.10.45",
        "@types/node-fetch": "^2.1.7",
        "chai": "^4.2.0",
        "ts-loader": "^5.3.3",
        "tslint": "^5.14.0",
        "typescript": "^2.6.1",
        "vscode": "^1.1.33",
        "webpack": "^4.29.6",
        "webpack-cli": "^3.3.0"
    },
    "dependencies": {
        "@types/ini": "^1.3.30",
        "@types/jsonpath": "^0.2.0",
        "@types/request-promise-native": "^1.0.15",
        "glob": "^7.1.3",
        "ini": "^1.3.5",
        "jsonpath": "^1.0.1",
        "node-fetch": "^2.3.0",
        "request": "^2.88.0",
        "request-promise-native": "^1.0.7"
    }
}
